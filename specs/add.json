[{"opcode": "04 ib", "instruction": "ADD AL, imm8", "operand_encoding": "I", "description": "Add imm8 to AL."}, {"opcode": "05 iw", "instruction": "ADD AX, imm16", "operand_encoding": "I", "description": "Add imm16 to AX."}, {"opcode": "05 id", "instruction": "ADD EAX, imm32", "operand_encoding": "I", "description": "Add imm32 to EAX."}, {"opcode": "REX.W + 05 id", "instruction": "ADD RAX, imm32", "operand_encoding": "I", "description": "Add imm32 sign-extended to 64-bits to RAX."}, {"opcode": "80 /0 ib", "instruction": "ADD r/m8, imm8", "operand_encoding": "MI", "description": "Add imm8 to r/m8."}, {"opcode": "REX + 80 /0 ib", "instruction": "ADD r/m8*, imm8", "operand_encoding": "MI", "description": "Add sign-extended imm8 to r/m8."}, {"opcode": "81 /0 iw", "instruction": "ADD r/m16, imm16", "operand_encoding": "MI", "description": "Add imm16 to r/m16."}, {"opcode": "81 /0 id", "instruction": "ADD r/m32, imm32", "operand_encoding": "MI", "description": "Add imm32 to r/m32."}, {"opcode": "REX.W + 81 /0 id", "instruction": "ADD r/m64, imm32", "operand_encoding": "MI", "description": "Add imm32 sign-extended to 64-bits to r/m64."}, {"opcode": "83 /0 ib", "instruction": "ADD r/m16, imm8", "operand_encoding": "MI", "description": "Add sign-extended imm8 to r/m16."}, {"opcode": "83 /0 ib", "instruction": "ADD r/m32, imm8", "operand_encoding": "MI", "description": "Add sign-extended imm8 to r/m32."}, {"opcode": "REX.W + 83 /0 ib", "instruction": "ADD r/m64, imm8", "operand_encoding": "MI", "description": "Add sign-extended imm8 to r/m64."}, {"opcode": "00 /r", "instruction": "ADD r/m8, r8", "operand_encoding": "MR", "description": "Add r8 to r/m8."}, {"opcode": "REX + 00 /r", "instruction": "ADD r/m8*, r8*", "operand_encoding": "MR", "description": "Add r8 to r/m8."}, {"opcode": "01 /r", "instruction": "ADD r/m16, r16", "operand_encoding": "MR", "description": "Add r16 to r/m16."}, {"opcode": "01 /r", "instruction": "ADD r/m32, r32", "operand_encoding": "MR", "description": "Add r32 to r/m32."}, {"opcode": "REX.W + 01 /r", "instruction": "ADD r/m64, r64", "operand_encoding": "MR", "description": "Add r64 to r/m64."}, {"opcode": "02 /r", "instruction": "ADD r8, r/m8", "operand_encoding": "RM", "description": "Add r/m8 to r8."}, {"opcode": "REX + 02 /r", "instruction": "ADD r8*, r/m8*", "operand_encoding": "RM", "description": "Add r/m8 to r8."}, {"opcode": "03 /r", "instruction": "ADD r16, r/m16", "operand_encoding": "RM", "description": "Add r/m16 to r16."}, {"opcode": "03 /r", "instruction": "ADD r32, r/m32", "operand_encoding": "RM", "description": "Add r/m32 to r32."}, {"opcode": "REX.W + 03 /r", "instruction": "ADD r64, r/m64", "operand_encoding": "RM", "description": "Add r/m64 to r64."}]