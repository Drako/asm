[{"opcode": "0F 47 /r", "instruction": "CMOVA r16, r/m16", "operand_encoding": "RM", "description": "Move if above (CF=0 and ZF=0)."}, {"opcode": "0F 47 /r", "instruction": "CMOVA r32, r/m32", "operand_encoding": "RM", "description": "Move if above (CF=0 and ZF=0)."}, {"opcode": "REX.W + 0F 47 /r", "instruction": "CMOVA r64, r/m64", "operand_encoding": "RM", "description": "Move if above (CF=0 and ZF=0)."}, {"opcode": "0F 43 /r", "instruction": "CMOVAE r16, r/m16", "operand_encoding": "RM", "description": "Move if above or equal (CF=0)."}, {"opcode": "0F 43 /r", "instruction": "CMOVAE r32, r/m32", "operand_encoding": "RM", "description": "Move if above or equal (CF=0)."}, {"opcode": "REX.W + 0F 43 /r", "instruction": "CMOVAE r64, r/m64", "operand_encoding": "RM", "description": "Move if above or equal (CF=0)."}, {"opcode": "0F 42 /r", "instruction": "CMOVB r16, r/m16", "operand_encoding": "RM", "description": "Move if below (CF=1)."}, {"opcode": "0F 42 /r", "instruction": "CMOVB r32, r/m32", "operand_encoding": "RM", "description": "Move if below (CF=1)."}, {"opcode": "REX.W + 0F 42 /r", "instruction": "CMOVB r64, r/m64", "operand_encoding": "RM", "description": "Move if below (CF=1)."}, {"opcode": "0F 46 /r", "instruction": "CMOVBE r16, r/m16", "operand_encoding": "RM", "description": "Move if below or equal (CF=1 or ZF=1)."}, {"opcode": "0F 46 /r", "instruction": "CMOVBE r32, r/m32", "operand_encoding": "RM", "description": "Move if below or equal (CF=1 or ZF=1)."}, {"opcode": "REX.W + 0F 46 /r", "instruction": "CMOVBE r64, r/m64", "operand_encoding": "RM", "description": "Move if below or equal (CF=1 or ZF=1)."}, {"opcode": "0F 42 /r", "instruction": "CMOVC r16, r/m16", "operand_encoding": "RM", "description": "Move if carry (CF=1)."}, {"opcode": "0F 42 /r", "instruction": "CMOVC r32, r/m32", "operand_encoding": "RM", "description": "Move if carry (CF=1)."}, {"opcode": "REX.W + 0F 42 /r", "instruction": "CMOVC r64, r/m64", "operand_encoding": "RM", "description": "Move if carry (CF=1)."}, {"opcode": "0F 44 /r", "instruction": "CMOVE r16, r/m16", "operand_encoding": "RM", "description": "Move if equal (ZF=1)."}, {"opcode": "0F 44 /r", "instruction": "CMOVE r32, r/m32", "operand_encoding": "RM", "description": "Move if equal (ZF=1)."}, {"opcode": "REX.W + 0F 44 /r", "instruction": "CMOVE r64, r/m64", "operand_encoding": "RM", "description": "Move if equal (ZF=1)."}, {"opcode": "0F 4F /r", "instruction": "CMOVG r16, r/m16", "operand_encoding": "RM", "description": "Move if greater (ZF=0 and SF=OF)."}, {"opcode": "0F 4F /r", "instruction": "CMOVG r32, r/m32", "operand_encoding": "RM", "description": "Move if greater (ZF=0 and SF=OF)."}, {"opcode": "0F 4D /r", "instruction": "CMOVGE r16, r/m16", "operand_encoding": "RM", "description": "Move if greater or equal (SF=OF)."}, {"opcode": "0F 4D /r", "instruction": "CMOVGE r32, r/m32", "operand_encoding": "RM", "description": "Move if greater or equal (SF=OF)."}, {"opcode": "REX.W + 0F 4D /r", "instruction": "CMOVGE r64, r/m64", "operand_encoding": "RM", "description": "Move if greater or equal (SF=OF)."}, {"opcode": "0F 4C /r", "instruction": "CMOVL r16, r/m16", "operand_encoding": "RM", "description": "Move if less (SF=\u0338 OF)."}, {"opcode": "0F 4C /r", "instruction": "CMOVL r32, r/m32", "operand_encoding": "RM", "description": "Move if less (SF=\u0338 OF)."}, {"opcode": "REX.W + 0F 4C /r", "instruction": "CMOVL r64, r/m64", "operand_encoding": "RM", "description": "Move if less (SF=\u0338 OF)."}, {"opcode": "0F 4E /r", "instruction": "CMOVLE r16, r/m16", "operand_encoding": "RM", "description": "Move if less or equal (ZF=1 or SF=\u0338 OF)."}, {"opcode": "0F 4E /r", "instruction": "CMOVLE r32, r/m32", "operand_encoding": "RM", "description": "Move if less or equal (ZF=1 or SF=\u0338 OF)."}, {"opcode": "REX.W + 0F 4E /r", "instruction": "CMOVLE r64, r/m64", "operand_encoding": "RM", "description": "Move if less or equal (ZF=1 or SF=\u0338 OF)."}, {"opcode": "0F 46 /r", "instruction": "CMOVNA r16, r/m16", "operand_encoding": "RM", "description": "Move if not above (CF=1 or ZF=1)."}, {"opcode": "0F 46 /r", "instruction": "CMOVNA r32, r/m32", "operand_encoding": "RM", "description": "Move if not above (CF=1 or ZF=1)."}, {"opcode": "REX.W + 0F 46 /r", "instruction": "CMOVNA r64, r/m64", "operand_encoding": "RM", "description": "Move if not above (CF=1 or ZF=1)."}, {"opcode": "0F 42 /r", "instruction": "CMOVNAE r16, r/m16", "operand_encoding": "RM", "description": "Move if not above or equal (CF=1)."}, {"opcode": "0F 42 /r", "instruction": "CMOVNAE r32, r/m32", "operand_encoding": "RM", "description": "Move if not above or equal (CF=1)."}, {"opcode": "REX.W + 0F 42 /r", "instruction": "CMOVNAE r64, r/m64", "operand_encoding": "RM", "description": "Move if not above or equal (CF=1)."}, {"opcode": "0F 43 /r", "instruction": "CMOVNB r16, r/m16", "operand_encoding": "RM", "description": "Move if not below (CF=0)."}, {"opcode": "0F 43 /r", "instruction": "CMOVNB r32, r/m32", "operand_encoding": "RM", "description": "Move if not below (CF=0)."}, {"opcode": "REX.W + 0F 43 /r", "instruction": "CMOVNB r64, r/m64", "operand_encoding": "RM", "description": "Move if not below (CF=0)."}, {"opcode": "0F 47 /r", "instruction": "CMOVNBE r16, r/m16", "operand_encoding": "RM", "description": "Move if not below or equal (CF=0 and ZF=0)."}, {"opcode": "0F 47 /r", "instruction": "CMOVNBE r32, r/m32", "operand_encoding": "RM", "description": "Move if not below or equal (CF=0 and ZF=0)."}, {"opcode": "REX.W + 0F 47 /r", "instruction": "CMOVNBE r64, r/m64", "operand_encoding": "RM", "description": "Move if not below or equal (CF=0 and ZF=0)."}, {"opcode": "0F 43 /r", "instruction": "CMOVNC r16, r/m16", "operand_encoding": "RM", "description": "Move if not carry (CF=0)."}, {"opcode": "0F 43 /r", "instruction": "CMOVNC r32, r/m32", "operand_encoding": "RM", "description": "Move if not carry (CF=0)."}, {"opcode": "REX.W + 0F 43 /r", "instruction": "CMOVNC r64, r/m64", "operand_encoding": "RM", "description": "Move if not carry (CF=0)."}, {"opcode": "0F 45 /r", "instruction": "CMOVNE r16, r/m16", "operand_encoding": "RM", "description": "Move if not equal (ZF=0)."}, {"opcode": "0F 45 /r", "instruction": "CMOVNE r32, r/m32", "operand_encoding": "RM", "description": "Move if not equal (ZF=0)."}, {"opcode": "REX.W + 0F 45 /r", "instruction": "CMOVNE r64, r/m64", "operand_encoding": "RM", "description": "Move if not equal (ZF=0)."}, {"opcode": "0F 4E /r", "instruction": "CMOVNG r16, r/m16", "operand_encoding": "RM", "description": "Move if not greater (ZF=1 or SF=\u0338 OF)."}, {"opcode": "0F 4E /r", "instruction": "CMOVNG r32, r/m32", "operand_encoding": "RM", "description": "Move if not greater (ZF=1 or SF=\u0338 OF)."}, {"opcode": "REX.W + 0F 4E /r", "instruction": "CMOVNG r64, r/m64", "operand_encoding": "RM", "description": "Move if not greater (ZF=1 or SF=\u0338 OF)."}, {"opcode": "0F 4C /r", "instruction": "CMOVNGE r16, r/m16", "operand_encoding": "RM", "description": "Move if not greater or equal (SF=\u0338 OF)."}, {"opcode": "0F 4C /r", "instruction": "CMOVNGE r32, r/m32", "operand_encoding": "RM", "description": "Move if not greater or equal (SF=\u0338 OF)."}, {"opcode": "REX.W + 0F 4C /r", "instruction": "CMOVNGE r64, r/m64", "operand_encoding": "RM", "description": "Move if not greater or equal (SF=\u0338 OF)."}, {"opcode": "0F 4D /r", "instruction": "CMOVNL r16, r/m16", "operand_encoding": "RM", "description": "Move if not less (SF=OF)."}, {"opcode": "0F 4D /r", "instruction": "CMOVNL r32, r/m32", "operand_encoding": "RM", "description": "Move if not less (SF=OF)."}, {"opcode": "REX.W + 0F 4D /r", "instruction": "CMOVNL r64, r/m64", "operand_encoding": "RM", "description": "Move if not less (SF=OF)."}, {"opcode": "0F 4F /r", "instruction": "CMOVNLE r16, r/m16", "operand_encoding": "RM", "description": "Move if not less or equal (ZF=0 and SF=OF)."}, {"opcode": "0F 4F /r", "instruction": "CMOVNLE r32, r/m32", "operand_encoding": "RM", "description": "Move if not less or equal (ZF=0 and SF=OF)."}, {"opcode": "REX.W + 0F 4F /r", "instruction": "CMOVNLE r64, r/m64", "operand_encoding": "RM", "description": "Move if not less or equal (ZF=0 and SF=OF)."}, {"opcode": "0F 41 /r", "instruction": "CMOVNO r16, r/m16", "operand_encoding": "RM", "description": "Move if not overflow (OF=0)."}, {"opcode": "0F 41 /r", "instruction": "CMOVNO r32, r/m32", "operand_encoding": "RM", "description": "Move if not overflow (OF=0)."}, {"opcode": "REX.W + 0F 41 /r", "instruction": "CMOVNO r64, r/m64", "operand_encoding": "RM", "description": "Move if not overflow (OF=0)."}, {"opcode": "0F 4B /r", "instruction": "CMOVNP r16, r/m16", "operand_encoding": "RM", "description": "Move if not parity (PF=0)."}, {"opcode": "0F 4B /r", "instruction": "CMOVNP r32, r/m32", "operand_encoding": "RM", "description": "Move if not parity (PF=0)."}, {"opcode": "REX.W + 0F 4B /r", "instruction": "CMOVNP r64, r/m64", "operand_encoding": "RM", "description": "Move if not parity (PF=0)."}, {"opcode": "0F 49 /r", "instruction": "CMOVNS r16, r/m16", "operand_encoding": "RM", "description": "Move if not sign (SF=0)."}, {"opcode": "0F 49 /r", "instruction": "CMOVNS r32, r/m32", "operand_encoding": "RM", "description": "Move if not sign (SF=0)."}, {"opcode": "REX.W + 0F 49 /r", "instruction": "CMOVNS r64, r/m64", "operand_encoding": "RM", "description": "Move if not sign (SF=0)."}, {"opcode": "0F 45 /r", "instruction": "CMOVNZ r16, r/m16", "operand_encoding": "RM", "description": "Move if not zero (ZF=0)."}, {"opcode": "0F 45 /r", "instruction": "CMOVNZ r32, r/m32", "operand_encoding": "RM", "description": "Move if not zero (ZF=0)."}, {"opcode": "REX.W + 0F 45 /r", "instruction": "CMOVNZ r64, r/m64", "operand_encoding": "RM", "description": "Move if not zero (ZF=0)."}, {"opcode": "0F 40 /r", "instruction": "CMOVO r16, r/m16", "operand_encoding": "RM", "description": "Move if overflow (OF=1)."}, {"opcode": "0F 40 /r", "instruction": "CMOVO r32, r/m32", "operand_encoding": "RM", "description": "Move if overflow (OF=1)."}, {"opcode": "REX.W + 0F 40 /r", "instruction": "CMOVO r64, r/m64", "operand_encoding": "RM", "description": "Move if overflow (OF=1)."}, {"opcode": "0F 4A /r", "instruction": "CMOVP r16, r/m16", "operand_encoding": "RM", "description": "Move if parity (PF=1)."}, {"opcode": "0F 4A /r", "instruction": "CMOVP r32, r/m32", "operand_encoding": "RM", "description": "Move if parity (PF=1)."}, {"opcode": "REX.W + 0F 4A /r", "instruction": "CMOVP r64, r/m64", "operand_encoding": "RM", "description": "Move if parity (PF=1)."}, {"opcode": "0F 4A /r", "instruction": "CMOVPE r16, r/m16", "operand_encoding": "RM", "description": "Move if parity even (PF=1)."}, {"opcode": "0F 4A /r", "instruction": "CMOVPE r32, r/m32", "operand_encoding": "RM", "description": "Move if parity even (PF=1)."}, {"opcode": "REX.W + 0F 4A /r", "instruction": "CMOVPE r64, r/m64", "operand_encoding": "RM", "description": "Move if parity even (PF=1)."}, {"opcode": "0F 4B /r", "instruction": "CMOVPO r16, r/m16", "operand_encoding": "RM", "description": "Move if parity odd (PF=0)."}, {"opcode": "0F 4B /r", "instruction": "CMOVPO r32, r/m32", "operand_encoding": "RM", "description": "Move if parity odd (PF=0)."}, {"opcode": "REX.W + 0F 4B /r", "instruction": "CMOVPO r64, r/m64", "operand_encoding": "RM", "description": "Move if parity odd (PF=0)."}, {"opcode": "0F 48 /r", "instruction": "CMOVS r16, r/m16", "operand_encoding": "RM", "description": "Move if sign (SF=1)."}, {"opcode": "0F 48 /r", "instruction": "CMOVS r32, r/m32", "operand_encoding": "RM", "description": "Move if sign (SF=1)."}, {"opcode": "REX.W + 0F 48 /r", "instruction": "CMOVS r64, r/m64", "operand_encoding": "RM", "description": "Move if sign (SF=1)."}, {"opcode": "0F 44 /r", "instruction": "CMOVZ r16, r/m16", "operand_encoding": "RM", "description": "Move if zero (ZF=1)."}, {"opcode": "0F 44 /r", "instruction": "CMOVZ r32, r/m32", "operand_encoding": "RM", "description": "Move if zero (ZF=1)."}, {"opcode": "REX.W + 0F 44 /r", "instruction": "CMOVZ r64, r/m64", "operand_encoding": "RM", "description": "Move if zero (ZF=1)."}]