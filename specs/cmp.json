[{"opcode": "3C ib", "instruction": "CMP AL, imm8", "operand_encoding": "I", "description": "Compare imm8 with AL."}, {"opcode": "3D iw", "instruction": "CMP AX, imm16", "operand_encoding": "I", "description": "Compare imm16 with AX."}, {"opcode": "3D id", "instruction": "CMP EAX, imm32", "operand_encoding": "I", "description": "Compare imm32 with EAX."}, {"opcode": "REX.W + 3D id", "instruction": "CMP RAX, imm32", "operand_encoding": "I", "description": "Compare imm32 sign-extended to 64-bits with RAX."}, {"opcode": "80 /7 ib", "instruction": "CMP r/m8, imm8", "operand_encoding": "MI", "description": "Compare imm8 with r/m8."}, {"opcode": "REX + 80 /7 ib", "instruction": "CMP r/m8*, imm8", "operand_encoding": "MI", "description": "Compare imm8 with r/m8."}, {"opcode": "81 /7 iw", "instruction": "CMP r/m16, imm16", "operand_encoding": "MI", "description": "Compare imm16 with r/m16."}, {"opcode": "81 /7 id", "instruction": "CMP r/m32, imm32", "operand_encoding": "MI", "description": "Compare imm32 with r/m32."}, {"opcode": "REX.W + 81 /7 id", "instruction": "CMP r/m64, imm32", "operand_encoding": "MI", "description": "Compare imm32 sign-extended to 64-bits with r/m64."}, {"opcode": "83 /7 ib", "instruction": "CMP r/m16, imm8", "operand_encoding": "MI", "description": "Compare imm8 with r/m16."}, {"opcode": "83 /7 ib", "instruction": "CMP r/m32, imm8", "operand_encoding": "MI", "description": "Compare imm8 with r/m32."}, {"opcode": "REX.W + 83 /7 ib", "instruction": "CMP r/m64, imm8", "operand_encoding": "MI", "description": "Compare imm8 with r/m64."}, {"opcode": "38 /r", "instruction": "CMP r/m8, r8", "operand_encoding": "MR", "description": "Compare r8 with r/m8."}, {"opcode": "REX + 38 /r", "instruction": "CMP r/m8*, r8*", "operand_encoding": "MR", "description": "Compare r8 with r/m8."}, {"opcode": "39 /r", "instruction": "CMP r/m16, r16", "operand_encoding": "MR", "description": "Compare r16 with r/m16."}, {"opcode": "39 /r", "instruction": "CMP r/m32, r32", "operand_encoding": "MR", "description": "Compare r32 with r/m32."}, {"opcode": "REX.W + 39 /r", "instruction": "CMP r/m64,r64", "operand_encoding": "MR", "description": "Compare r64 with r/m64."}, {"opcode": "3A /r", "instruction": "CMP r8, r/m8", "operand_encoding": "RM", "description": "Compare r/m8 with r8."}, {"opcode": "REX + 3A /r", "instruction": "CMP r8*, r/m8*", "operand_encoding": "RM", "description": "Compare r/m8 with r8."}, {"opcode": "3B /r", "instruction": "CMP r16, r/m16", "operand_encoding": "RM", "description": "Compare r/m16 with r16."}, {"opcode": "3B /r", "instruction": "CMP r32, r/m32", "operand_encoding": "RM", "description": "Compare r/m32 with r32."}, {"opcode": "REX.W + 3B /r", "instruction": "CMP r64, r/m64", "operand_encoding": "RM", "description": "Compare r/m64 with r64."}]