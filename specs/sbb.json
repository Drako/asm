[{"opcode": "1C ib", "instruction": "SBB AL, imm8", "operand_encoding": "I", "description": "Subtract with borrow imm8 from AL."}, {"opcode": "1D iw", "instruction": "SBB AX, imm16", "operand_encoding": "I", "description": "Subtract with borrow imm16 from AX."}, {"opcode": "1D id", "instruction": "SBB EAX, imm32", "operand_encoding": "I", "description": "Subtract with borrow imm32 from EAX."}, {"opcode": "REX.W + 1D id", "instruction": "SBB RAX, imm32", "operand_encoding": "I", "description": "Subtract with borrow sign-extended imm.32 to 64-bits from RAX."}, {"opcode": "80 /3 ib", "instruction": "SBB r/m8, imm8", "operand_encoding": "MI", "description": "Subtract with borrow imm8 from r/m8."}, {"opcode": "REX + 80 /3 ib", "instruction": "SBB r/m8*, imm8", "operand_encoding": "MI", "description": "Subtract with borrow imm8 from r/m8."}, {"opcode": "81 /3 iw", "instruction": "SBB r/m16, imm16", "operand_encoding": "MI", "description": "Subtract with borrow imm16 from r/m16."}, {"opcode": "81 /3 id", "instruction": "SBB r/m32, imm32", "operand_encoding": "MI", "description": "Subtract with borrow imm32 from r/m32."}, {"opcode": "REX.W + 81 /3 id", "instruction": "SBB r/m64, imm32", "operand_encoding": "MI", "description": "Subtract with borrow sign-extended imm32 to 64-bits from r/m64."}, {"opcode": "83 /3 ib", "instruction": "SBB r/m16, imm8", "operand_encoding": "MI", "description": "Subtract with borrow sign-extended imm8 from r/m16."}, {"opcode": "83 /3 ib", "instruction": "SBB r/m32, imm8", "operand_encoding": "MI", "description": "Subtract with borrow sign-extended imm8 from r/m32."}, {"opcode": "REX.W + 83 /3 ib", "instruction": "SBB r/m64, imm8", "operand_encoding": "MI", "description": "Subtract with borrow sign-extended imm8 from r/m64."}, {"opcode": "18 /r", "instruction": "SBB r/m8, r8", "operand_encoding": "MR", "description": "Subtract with borrow r8 from r/m8."}, {"opcode": "REX + 18 /r", "instruction": "SBB r/m8*, r8", "operand_encoding": "MR", "description": "Subtract with borrow r8 from r/m8."}, {"opcode": "19 /r", "instruction": "SBB r/m16, r16", "operand_encoding": "MR", "description": "Subtract with borrow r16 from r/m16."}, {"opcode": "19 /r", "instruction": "SBB r/m32, r32", "operand_encoding": "MR", "description": "Subtract with borrow r32 from r/m32."}, {"opcode": "REX.W + 19 /r", "instruction": "SBB r/m64, r64", "operand_encoding": "MR", "description": "Subtract with borrow r64 from r/m64."}, {"opcode": "1A /r", "instruction": "SBB r8, r/m8", "operand_encoding": "RM", "description": "Subtract with borrow r/m8 from r8."}, {"opcode": "REX + 1A /r", "instruction": "SBB r8*, r/m8*", "operand_encoding": "RM", "description": "Subtract with borrow r/m8 from r8."}, {"opcode": "1B /r", "instruction": "SBB r16, r/m16", "operand_encoding": "RM", "description": "Subtract with borrow r/m16 from r16."}, {"opcode": "1B /r", "instruction": "SBB r32, r/m32", "operand_encoding": "RM", "description": "Subtract with borrow r/m32 from r32."}, {"opcode": "REX.W + 1B /r", "instruction": "SBB r64, r/m64", "operand_encoding": "RM", "description": "Subtract with borrow r/m64 from r64."}]