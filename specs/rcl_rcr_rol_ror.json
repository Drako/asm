[
  {
    "opcode": "D0 /2",
    "instruction": "RCL r/m8, 1",
    "operand_encoding": "M1",
    "description": "Rotate 9 bits (CF, r/m8) left once."
  },
  {
    "opcode": "REX + D0 /2",
    "instruction": "RCL r/m8*, 1",
    "operand_encoding": "M1",
    "description": "Rotate 9 bits (CF, r/m8) left once."
  },
  {
    "opcode": "D2 /2",
    "instruction": "RCL r/m8, CL",
    "operand_encoding": "MC",
    "description": "Rotate 9 bits (CF, r/m8) left CL times."
  },
  {
    "opcode": "REX + D2 /2",
    "instruction": "RCL r/m8*, CL",
    "operand_encoding": "MC",
    "description": "Rotate 9 bits (CF, r/m8) left CL times."
  },
  {
    "opcode": "C0 /2 ib",
    "instruction": "RCL r/m8, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 9 bits (CF, r/m8) left imm8 times."
  },
  {
    "opcode": "REX + C0 /2 ib",
    "instruction": "RCL r/m8*, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 9 bits (CF, r/m8) left imm8 times."
  },
  {
    "opcode": "D1 /2",
    "instruction": "RCL r/m16, 1",
    "operand_encoding": "M1",
    "description": "Rotate 17 bits (CF, r/m16) left once."
  },
  {
    "opcode": "D3 /2",
    "instruction": "RCL r/m16, CL",
    "operand_encoding": "MC",
    "description": "Rotate 17 bits (CF, r/m16) left CL times."
  },
  {
    "opcode": "C1 /2 ib",
    "instruction": "RCL r/m16, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 17 bits (CF, r/m16) left imm8 times."
  },
  {
    "opcode": "D1 /2",
    "instruction": "RCL r/m32, 1",
    "operand_encoding": "M1",
    "description": "Rotate 33 bits (CF, r/m32) left once."
  },
  {
    "opcode": "REX.W + D1 /2",
    "instruction": "RCL r/m64, 1",
    "operand_encoding": "M1",
    "description": "Rotate 65 bits (CF, r/m64) left once. Uses a 6 bit count."
  },
  {
    "opcode": "D3 /2",
    "instruction": "RCL r/m32, CL",
    "operand_encoding": "MC",
    "description": "Rotate 33 bits (CF, r/m32) left CL times."
  },
  {
    "opcode": "REX.W + D3 /2",
    "instruction": "RCL r/m64, CL",
    "operand_encoding": "MC",
    "description": "Rotate 65 bits (CF, r/m64) left CL times. Uses a 6 bit count."
  },
  {
    "opcode": "C1 /2 ib",
    "instruction": "RCL r/m32, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 33 bits (CF, r/m32) left imm8 times."
  },
  {
    "opcode": "REX.W + C1 /2 ib",
    "instruction": "RCL r/m64, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 65 bits (CF, r/m64) left imm8 times. Uses a 6 bit count."
  },
  {
    "opcode": "D0 /3",
    "instruction": "RCR r/m8, 1",
    "operand_encoding": "M1",
    "description": "Rotate 9 bits (CF, r/m8) right once."
  },
  {
    "opcode": "REX + D0 /3",
    "instruction": "RCR r/m8*, 1",
    "operand_encoding": "M1",
    "description": "Rotate 9 bits (CF, r/m8) right once."
  },
  {
    "opcode": "D2 /3",
    "instruction": "RCR r/m8, CL",
    "operand_encoding": "MC",
    "description": "Rotate 9 bits (CF, r/m8) right CL times."
  },
  {
    "opcode": "REX + D2 /3",
    "instruction": "RCR r/m8*, CL",
    "operand_encoding": "MC",
    "description": "Rotate 9 bits (CF, r/m8) right CL times."
  },
  {
    "opcode": "C0 /3 ib",
    "instruction": "RCR r/m8, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 9 bits (CF, r/m8) right imm8 times."
  },
  {
    "opcode": "REX + C0 /3 ib",
    "instruction": "RCR r/m8*, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 9 bits (CF, r/m8) right imm8 times."
  },
  {
    "opcode": "D1 /3",
    "instruction": "RCR r/m16, 1",
    "operand_encoding": "M1",
    "description": "Rotate 17 bits (CF, r/m16) right once."
  },
  {
    "opcode": "D3 /3",
    "instruction": "RCR r/m16, CL",
    "operand_encoding": "MC",
    "description": "Rotate 17 bits (CF, r/m16) right CL times."
  },
  {
    "opcode": "C1 /3 ib",
    "instruction": "RCR r/m16, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 17 bits (CF, r/m16) right imm8 times."
  },
  {
    "opcode": "D1 /3",
    "instruction": "RCR r/m32, 1",
    "operand_encoding": "M1",
    "description": "Rotate 33 bits (CF, r/m32) right once. Uses a 6 bit count."
  },
  {
    "opcode": "REX.W + D1 /3",
    "instruction": "RCR r/m64, 1",
    "operand_encoding": "M1",
    "description": "Rotate 65 bits (CF, r/m64) right once. Uses a 6 bit count."
  },
  {
    "opcode": "D3 /3",
    "instruction": "RCR r/m32, CL",
    "operand_encoding": "MC",
    "description": "Rotate 33 bits (CF, r/m32) right CL times."
  },
  {
    "opcode": "REX.W + D3 /3",
    "instruction": "RCR r/m64, CL",
    "operand_encoding": "MC",
    "description": "Rotate 65 bits (CF, r/m64) right CL times. Uses a 6 bit count."
  },
  {
    "opcode": "C1 /3 ib",
    "instruction": "RCR r/m32, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 33 bits (CF, r/m32) right imm8 times."
  },
  {
    "opcode": "REX.W + C1 /3 ib",
    "instruction": "RCR r/m64, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 65 bits (CF, r/m64) right imm8 times. Uses a 6 bit count."
  },
  {
    "opcode": "D0 /0",
    "instruction": "ROL r/m8, 1",
    "operand_encoding": "M1",
    "description": "Rotate 8 bits r/m8 left once."
  },
  {
    "opcode": "REX + D0 /0",
    "instruction": "ROL r/m8*, 1",
    "operand_encoding": "M1",
    "description": "Rotate 8 bits r/m8 left once"
  },
  {
    "opcode": "D2 /0",
    "instruction": "ROL r/m8, CL",
    "operand_encoding": "MC",
    "description": "Rotate 8 bits r/m8 left CL times."
  },
  {
    "opcode": "REX + D2 /0",
    "instruction": "ROL r/m8*, CL",
    "operand_encoding": "MC",
    "description": "Rotate 8 bits r/m8 left CL times."
  },
  {
    "opcode": "C0 /0 ib",
    "instruction": "ROL r/m8, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 8 bits r/m8 left imm8 times."
  },
  {
    "opcode": "REX + C0 /0 ib",
    "instruction": "ROL r/m8*, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 8 bits r/m8 left imm8 times."
  },
  {
    "opcode": "D1 /0",
    "instruction": "ROL r/m16, 1",
    "operand_encoding": "M1",
    "description": "Rotate 16 bits r/m16 left once."
  },
  {
    "opcode": "D3 /0",
    "instruction": "ROL r/m16, CL",
    "operand_encoding": "MC",
    "description": "Rotate 16 bits r/m16 left CL times."
  },
  {
    "opcode": "C1 /0 ib",
    "instruction": "ROL r/m16, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 16 bits r/m16 left imm8 times."
  },
  {
    "opcode": "D1 /0",
    "instruction": "ROL r/m32, 1",
    "operand_encoding": "M1",
    "description": "Rotate 32 bits r/m32 left once."
  },
  {
    "opcode": "REX.W + D1 /0",
    "instruction": "ROL r/m64, 1",
    "operand_encoding": "M1",
    "description": "Rotate 64 bits r/m64 left once. Uses a 6 bit count."
  },
  {
    "opcode": "D3 /0",
    "instruction": "ROL r/m32, CL",
    "operand_encoding": "MC",
    "description": "Rotate 32 bits r/m32 left CL times."
  },
  {
    "opcode": "REX.W + D3 /0",
    "instruction": "ROL r/m64, CL",
    "operand_encoding": "MC",
    "description": "Rotate 64 bits r/m64 left CL times. Uses a 6 bit count."
  },
  {
    "opcode": "C1 /0 ib",
    "instruction": "ROL r/m32, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 32 bits r/m32 left imm8 times."
  },
  {
    "opcode": "REX.W + C1 /0 ib",
    "instruction": "ROL r/m64, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 64 bits r/m64 left imm8 times. Uses a 6 bit count."
  },
  {
    "opcode": "D0 /1",
    "instruction": "ROR r/m8, 1",
    "operand_encoding": "M1",
    "description": "Rotate 8 bits r/m8 right once."
  },
  {
    "opcode": "REX + D0 /1",
    "instruction": "ROR r/m8*, 1",
    "operand_encoding": "M1",
    "description": "Rotate 8 bits r/m8 right once."
  },
  {
    "opcode": "D2 /1",
    "instruction": "ROR r/m8, CL",
    "operand_encoding": "MC",
    "description": "Rotate 8 bits r/m8 right CL times."
  },
  {
    "opcode": "REX + D2 /1",
    "instruction": "ROR r/m8*, CL",
    "operand_encoding": "MC",
    "description": "Rotate 8 bits r/m8 right CL times."
  },
  {
    "opcode": "C0 /1 ib",
    "instruction": "ROR r/m8, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 8 bits r/m16 right imm8 times."
  },
  {
    "opcode": "REX + C0 /1 ib",
    "instruction": "ROR r/m8*, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 8 bits r/m16 right imm8 times."
  },
  {
    "opcode": "D1 /1",
    "instruction": "ROR r/m16, 1",
    "operand_encoding": "M1",
    "description": "Rotate 16 bits r/m16 right once."
  },
  {
    "opcode": "D3 /1",
    "instruction": "ROR r/m16, CL",
    "operand_encoding": "MC",
    "description": "Rotate 16 bits r/m16 right CL times."
  },
  {
    "opcode": "C1 /1 ib",
    "instruction": "ROR r/m16, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 16 bits r/m16 right imm8 times."
  },
  {
    "opcode": "D1 /1",
    "instruction": "ROR r/m32, 1",
    "operand_encoding": "M1",
    "description": "Rotate 32 bits r/m32 right once."
  },
  {
    "opcode": "REX.W + D1 /1",
    "instruction": "ROR r/m64, 1",
    "operand_encoding": "M1",
    "description": "Rotate 64 bits r/m64 right once. Uses a 6 bit count."
  },
  {
    "opcode": "D3 /1",
    "instruction": "ROR r/m32, CL",
    "operand_encoding": "MC",
    "description": "Rotate 32 bits r/m32 right CL times."
  },
  {
    "opcode": "REX.W + D3 /1",
    "instruction": "ROR r/m64, CL",
    "operand_encoding": "MC",
    "description": "Rotate 64 bits r/m64 right CL times. Uses a 6 bit count."
  },
  {
    "opcode": "C1 /1 ib",
    "instruction": "ROR r/m32, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 32 bits r/m32 right imm8 times."
  },
  {
    "opcode": "REX.W + C1 /1 ib",
    "instruction": "ROR r/m64, imm8",
    "operand_encoding": "MI",
    "description": "Rotate 64 bits r/m64 right imm8 times. Uses a 6 bit count."
  }
]
