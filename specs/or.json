[{"opcode": "0C ib", "instruction": "OR AL, imm8", "operand_encoding": "I", "description": "AL OR imm8."}, {"opcode": "0D iw", "instruction": "OR AX, imm16", "operand_encoding": "I", "description": "AX OR imm16."}, {"opcode": "0D id", "instruction": "OR EAX, imm32", "operand_encoding": "I", "description": "EAX OR imm32."}, {"opcode": "REX.W + 0D id", "instruction": "OR RAX, imm32", "operand_encoding": "I", "description": "RAX OR imm32 (sign-extended)."}, {"opcode": "80 /1 ib", "instruction": "OR r/m8, imm8", "operand_encoding": "MI", "description": "r/m8 OR imm8."}, {"opcode": "REX + 80 /1 ib", "instruction": "OR r/m8*, imm8", "operand_encoding": "MI", "description": "r/m8 OR imm8."}, {"opcode": "81 /1 iw", "instruction": "OR r/m16, imm16", "operand_encoding": "MI", "description": "r/m16 OR imm16."}, {"opcode": "81 /1 id", "instruction": "OR r/m32, imm32", "operand_encoding": "MI", "description": "r/m32 OR imm32."}, {"opcode": "REX.W + 81 /1 id", "instruction": "OR r/m64, imm32", "operand_encoding": "MI", "description": "r/m64 OR imm32 (sign-extended)."}, {"opcode": "83 /1 ib", "instruction": "OR r/m16, imm8", "operand_encoding": "MI", "description": "r/m16 OR imm8 (sign-extended)."}, {"opcode": "83 /1 ib", "instruction": "OR r/m32, imm8", "operand_encoding": "MI", "description": "r/m32 OR imm8 (sign-extended)."}, {"opcode": "REX.W + 83 /1 ib", "instruction": "OR r/m64, imm8", "operand_encoding": "MI", "description": "r/m64 OR imm8 (sign-extended)."}, {"opcode": "08 /r", "instruction": "OR r/m8, r8", "operand_encoding": "MR", "description": "r/m8 OR r8."}, {"opcode": "REX + 08 /r", "instruction": "OR r/m8*, r8*", "operand_encoding": "MR", "description": "r/m8 OR r8."}, {"opcode": "09 /r", "instruction": "OR r/m16, r16", "operand_encoding": "MR", "description": "r/m16 OR r16."}, {"opcode": "09 /r", "instruction": "OR r/m32, r32", "operand_encoding": "MR", "description": "r/m32 OR r32."}, {"opcode": "REX.W + 09 /r", "instruction": "OR r/m64, r64", "operand_encoding": "MR", "description": "r/m64 OR r64."}, {"opcode": "0A /r", "instruction": "OR r8, r/m8", "operand_encoding": "RM", "description": "r8 OR r/m8."}, {"opcode": "REX + 0A /r", "instruction": "OR r8*, r/m8*", "operand_encoding": "RM", "description": "r8 OR r/m8."}, {"opcode": "0B /r", "instruction": "OR r16, r/m16", "operand_encoding": "RM", "description": "r16 OR r/m16."}, {"opcode": "0B /r", "instruction": "OR r32, r/m32", "operand_encoding": "RM", "description": "r32 OR r/m32."}, {"opcode": "REX.W + 0B /r", "instruction": "OR r64, r/m64", "operand_encoding": "RM", "description": "r64 OR r/m64."}]