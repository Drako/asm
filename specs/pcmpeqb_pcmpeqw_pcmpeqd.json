[
  {
    "opcode": "NP 0F 74 /r1",
    "instruction": "PCMPEQB mm, mm/m64",
    "operand_encoding": "A",
    "description": "Compare packed bytes in mm/m64 and mm for equality."
  },
  {
    "opcode": "66 0F 74 /r",
    "instruction": "PCMPEQB xmm1, xmm2/m128",
    "operand_encoding": "A",
    "description": "Compare packed bytes in xmm2/m128 and xmm1 for equality."
  },
  {
    "opcode": "NP 0F 75 /r1",
    "instruction": "PCMPEQW mm, mm/m64",
    "operand_encoding": "A",
    "description": "Compare packed words in mm/m64 and mm for equality."
  },
  {
    "opcode": "66 0F 75 /r",
    "instruction": "PCMPEQW xmm1, xmm2/m128",
    "operand_encoding": "A",
    "description": "Compare packed words in xmm2/m128 and xmm1 for equality."
  },
  {
    "opcode": "NP 0F 76 /r1",
    "instruction": "PCMPEQD mm, mm/m64",
    "operand_encoding": "A",
    "description": "Compare packed doublewords in mm/m64 and mm for equality."
  },
  {
    "opcode": "66 0F 76 /r",
    "instruction": "PCMPEQD xmm1, xmm2/m128",
    "operand_encoding": "A",
    "description": "Compare packed doublewords in xmm2/m128 and xmm1 for equality."
  },
  {
    "opcode": "VEX.128.66.0F.WIG 74 /r",
    "instruction": "VPCMPEQB xmm1, xmm2, xmm3/m128",
    "operand_encoding": "B",
    "description": "Compare packed bytes in xmm3/m128 and xmm2 for equality."
  },
  {
    "opcode": "VEX.128.66.0F.WIG 75 /r",
    "instruction": "VPCMPEQW xmm1, xmm2, xmm3/m128",
    "operand_encoding": "B",
    "description": "Compare packed words in xmm3/m128 and xmm2 for equality."
  },
  {
    "opcode": "VEX.128.66.0F.WIG 76 /r",
    "instruction": "VPCMPEQD xmm1, xmm2, xmm3/m128",
    "operand_encoding": "B",
    "description": "Compare packed doublewords in xmm3/m128 and xmm2 for equality."
  },
  {
    "opcode": "VEX.256.66.0F.WIG 74 /r",
    "instruction": "VPCMPEQB ymm1, ymm2, ymm3 /m256",
    "operand_encoding": "B",
    "description": "Compare packed bytes in ymm3/m256 and ymm2 for equality."
  },
  {
    "opcode": "VEX.256.66.0F.WIG 75 /r",
    "instruction": "VPCMPEQW ymm1, ymm2, ymm3 /m256",
    "operand_encoding": "B",
    "description": "Compare packed words in ymm3/m256 and ymm2 for equality."
  },
  {
    "opcode": "VEX.256.66.0F.WIG 76 /r",
    "instruction": "VPCMPEQD ymm1, ymm2, ymm3 /m256",
    "operand_encoding": "B",
    "description": "Compare packed doublewords in ymm3/m256 and ymm2 for equality."
  },
  {
    "opcode": "EVEX.128.66.0F.W0 76 /r",
    "instruction": "VPCMPEQD k1 {k2}, xmm2, xmm3/m128/m32bcst",
    "operand_encoding": "C",
    "description": "Compare Equal between int32 vector xmm2 and int32 vector xmm3/m128/m32bcst, and set vector mask k1 to reflect the zero/nonzero status of each element of the result, under writemask."
  },
  {
    "opcode": "EVEX.256.66.0F.W0 76 /r",
    "instruction": "VPCMPEQD k1 {k2}, ymm2, ymm3/m256/m32bcst",
    "operand_encoding": "C",
    "description": "Compare Equal between int32 vector ymm2 and int32 vector ymm3/m256/m32bcst, and set vector mask k1 to reflect the zero/nonzero status of each element of the result, under writemask."
  },
  {
    "opcode": "EVEX.512.66.0F.W0 76 /r",
    "instruction": "VPCMPEQD k1 {k2}, zmm2, zmm3/m512/m32bcst",
    "operand_encoding": "C",
    "description": "Compare Equal between int32 vectors in zmm2 and zmm3/m512/m32bcst, and set destination k1 according to the comparison results under writemask k2."
  },
  {
    "opcode": "EVEX.128.66.0F.WIG 74 /r",
    "instruction": "VPCMPEQB k1 {k2}, xmm2, xmm3 /m128",
    "operand_encoding": "D",
    "description": "Compare packed bytes in xmm3/m128 and xmm2 for equality and set vector mask k1 to reflect the zero/nonzero status of each element of the result, under writemask."
  }
]
