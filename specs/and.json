[{"opcode": "24 ib", "instruction": "AND AL, imm8", "operand_encoding": "I", "description": "AL AND imm8."}, {"opcode": "25 iw", "instruction": "AND AX, imm16", "operand_encoding": "I", "description": "AX AND imm16."}, {"opcode": "25 id", "instruction": "AND EAX, imm32", "operand_encoding": "I", "description": "EAX AND imm32."}, {"opcode": "REX.W + 25 id", "instruction": "AND RAX, imm32", "operand_encoding": "I", "description": "RAX AND imm32 sign-extended to 64-bits."}, {"opcode": "80 /4 ib", "instruction": "AND r/m8, imm8", "operand_encoding": "MI", "description": "r/m8 AND imm8."}, {"opcode": "REX + 80 /4 ib", "instruction": "AND r/m8*, imm8", "operand_encoding": "MI", "description": "r/m8 AND imm8."}, {"opcode": "81 /4 iw", "instruction": "AND r/m16, imm16", "operand_encoding": "MI", "description": "r/m16 AND imm16."}, {"opcode": "81 /4 id", "instruction": "AND r/m32, imm32", "operand_encoding": "MI", "description": "r/m32 AND imm32."}, {"opcode": "REX.W + 81 /4 id", "instruction": "AND r/m64, imm32", "operand_encoding": "MI", "description": "r/m64 AND imm32 sign extended to 64-bits."}, {"opcode": "83 /4 ib", "instruction": "AND r/m16, imm8", "operand_encoding": "MI", "description": "r/m16 AND imm8 (sign-extended)."}, {"opcode": "83 /4 ib", "instruction": "AND r/m32, imm8", "operand_encoding": "MI", "description": "r/m32 AND imm8 (sign-extended)."}, {"opcode": "REX.W + 83 /4 ib", "instruction": "AND r/m64, imm8", "operand_encoding": "MI", "description": "r/m64 AND imm8 (sign-extended)."}, {"opcode": "20 /r", "instruction": "AND r/m8, r8", "operand_encoding": "MR", "description": "r/m8 AND r8."}, {"opcode": "REX + 20 /r", "instruction": "AND r/m8*, r8*", "operand_encoding": "MR", "description": "r/m64 AND r8 (sign-extended)."}, {"opcode": "21 /r", "instruction": "AND r/m16, r16", "operand_encoding": "MR", "description": "r/m16 AND r16."}, {"opcode": "21 /r", "instruction": "AND r/m32, r32", "operand_encoding": "MR", "description": "r/m32 AND r32."}, {"opcode": "REX.W + 21 /r", "instruction": "AND r/m64, r64", "operand_encoding": "MR", "description": "r/m64 AND r32."}, {"opcode": "22 /r", "instruction": "AND r8, r/m8", "operand_encoding": "RM", "description": "r8 AND r/m8."}, {"opcode": "REX + 22 /r", "instruction": "AND r8*, r/m8*", "operand_encoding": "RM", "description": "r/m64 AND r8 (sign-extended)."}, {"opcode": "23 /r", "instruction": "AND r16, r/m16", "operand_encoding": "RM", "description": "r16 AND r/m16."}, {"opcode": "23 /r", "instruction": "AND r32, r/m32", "operand_encoding": "RM", "description": "r32 AND r/m32."}, {"opcode": "REX.W + 23 /r", "instruction": "AND r64, r/m64", "operand_encoding": "RM", "description": "r64 AND r/m64."}]