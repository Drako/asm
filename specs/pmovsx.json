[{"opcode": "66 0f 38 20 /r", "instruction": "PMOVSXBW xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 8 packed 8-bit integers in the low 8 bytes of xmm2/m64 to 8 packed 16-bit integers in xmm1."}, {"opcode": "66 0f 38 21 /r", "instruction": "PMOVSXBD xmm1, xmm2/m32", "operand_encoding": "A", "description": "Sign extend 4 packed 8-bit integers in the low 4 bytes of xmm2/m32 to 4 packed 32-bit integers in xmm1."}, {"opcode": "66 0f 38 22 /r", "instruction": "PMOVSXBQ xmm1, xmm2/m16", "operand_encoding": "A", "description": "Sign extend 2 packed 8-bit integers in the low 2 bytes of xmm2/m16 to 2 packed 64-bit integers in xmm1."}, {"opcode": "66 0f 38 23/r", "instruction": "PMOVSXWD xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 4 packed 16-bit integers in the low 8 bytes of xmm2/m64 to 4 packed 32-bit integers in xmm1."}, {"opcode": "66 0f 38 24 /r", "instruction": "PMOVSXWQ xmm1, xmm2/m32", "operand_encoding": "A", "description": "Sign extend 2 packed 16-bit integers in the low 4 bytes of xmm2/m32 to 2 packed 64-bit integers in xmm1."}, {"opcode": "66 0f 38 25 /r", "instruction": "PMOVSXDQ xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 2 packed 32-bit integers in the low 8 bytes of xmm2/m64 to 2 packed 64-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 20 /r", "instruction": "VPMOVSXBW xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 8 packed 8-bit integers in the low 8 bytes of xmm2/m64 to 8 packed 16-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 21 /r", "instruction": "VPMOVSXBD xmm1, xmm2/m32", "operand_encoding": "A", "description": "Sign extend 4 packed 8-bit integers in the low 4 bytes of xmm2/m32 to 4 packed 32-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 22 /r", "instruction": "VPMOVSXBQ xmm1, xmm2/m16", "operand_encoding": "A", "description": "Sign extend 2 packed 8-bit integers in the low 2 bytes of xmm2/m16 to 2 packed 64-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 23 /r", "instruction": "VPMOVSXWD xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 4 packed 16-bit integers in the low 8 bytes of xmm2/m64 to 4 packed 32-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 24 /r", "instruction": "VPMOVSXWQ xmm1, xmm2/m32", "operand_encoding": "A", "description": "Sign extend 2 packed 16-bit integers in the low 4 bytes of xmm2/m32 to 2 packed 64-bit integers in xmm1."}, {"opcode": "VEX.128.66.0F38.WIG 25 /r", "instruction": "VPMOVSXDQ xmm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 2 packed 32-bit integers in the low 8 bytes of xmm2/m64 to 2 packed 64-bit integers in xmm1."}, {"opcode": "VEX.256.66.0F38.WIG 20 /r", "instruction": "VPMOVSXBW ymm1, xmm2/m128", "operand_encoding": "A", "description": "Sign extend 16 packed 8-bit integers in xmm2/m128 to 16 packed 16-bit integers in ymm1."}, {"opcode": "VEX.256.66.0F38.WIG 21 /r", "instruction": "VPMOVSXBD ymm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 8 packed 8-bit integers in the low 8 bytes of xmm2/m64 to 8 packed 32-bit integers in ymm1."}, {"opcode": "VEX.256.66.0F38.WIG 22 /r", "instruction": "VPMOVSXBQ ymm1, xmm2/m32", "operand_encoding": "A", "description": "Sign extend 4 packed 8-bit integers in the low 4 bytes of xmm2/m32 to 4 packed 64-bit integers in ymm1."}, {"opcode": "VEX.256.66.0F38.WIG 23 /r", "instruction": "VPMOVSXWD ymm1, xmm2/m128", "operand_encoding": "A", "description": "Sign extend 8 packed 16-bit integers in the low 16 bytes of xmm2/m128 to 8 packed 32-bit integers in ymm1."}, {"opcode": "VEX.256.66.0F38.WIG 24 /r", "instruction": "VPMOVSXWQ ymm1, xmm2/m64", "operand_encoding": "A", "description": "Sign extend 4 packed 16-bit integers in the low 8 bytes of xmm2/m64 to 4 packed 64-bit integers in ymm1."}, {"opcode": "VEX.256.66.0F38.WIG 25 /r", "instruction": "VPMOVSXDQ ymm1, xmm2/m128", "operand_encoding": "A", "description": "Sign extend 4 packed 32-bit integers in the low 16 bytes of xmm2/m128 to 4 packed 64-bit integers in ymm1."}, {"opcode": "EVEX.128.66.0F38.WIG 20 /r", "instruction": "VPMOVSXBW xmm1 {k1}{z}, xmm2/m64", "operand_encoding": "B", "description": "Sign extend 8 packed 8-bit integers in xmm2/m64 to 8 packed 16-bit integers in zmm1."}, {"opcode": "EVEX.256.66.0F38.WIG 20 /r", "instruction": "VPMOVSXBW ymm1 {k1}{z}, xmm2/m128", "operand_encoding": "B", "description": "Sign extend 16 packed 8-bit integers in xmm2/m128 to 16 packed 16-bit integers in ymm1."}, {"opcode": "EVEX.512.66.0F38.WIG 20 /r", "instruction": "VPMOVSXBW zmm1 {k1}{z}, ymm2/m256", "operand_encoding": "B", "description": "Sign extend 32 packed 8-bit integers in ymm2/m256 to 32 packed 16-bit integers in zmm1."}, {"opcode": "EVEX.128.66.0F38.WIG 21 /r", "instruction": "VPMOVSXBD xmm1 {k1}{z}, xmm2/m32", "operand_encoding": "C", "description": "Sign extend 4 packed 8-bit integers in the low 4 bytes of xmm2/m32 to 4 packed 32-bit integers in xmm1 subject to writemask k1."}, {"opcode": "EVEX.256.66.0F38.WIG 21 /r", "instruction": "VPMOVSXBD ymm1 {k1}{z}, xmm2/m64", "operand_encoding": "C", "description": "Sign extend 8 packed 8-bit integers in the low 8 bytes of xmm2/m64 to 8 packed 32-bit integers in ymm1 subject to writemask k1."}, {"opcode": "EVEX.512.66.0F38.WIG 21 /r", "instruction": "VPMOVSXBD zmm1 {k1}{z}, xmm2/m128", "operand_encoding": "C", "description": "Sign extend 16 packed 8-bit integers in the low 16 bytes of xmm2/m128 to 16 packed 32-bit integers in zmm1 subject to writemask k1."}, {"opcode": "EVEX.128.66.0F38.WIG 22 /r", "instruction": "VPMOVSXBQ xmm1 {k1}{z}, xmm2/m16", "operand_encoding": "D", "description": "Sign extend 2 packed 8-bit integers in the low 2 bytes of xmm2/m16 to 2 packed 64-bit integers in xmm1 subject to writemask k1."}, {"opcode": "EVEX.256.66.0F38.WIG 22 /r", "instruction": "VPMOVSXBQ ymm1 {k1}{z}, xmm2/m32", "operand_encoding": "D", "description": "Sign extend 4 packed 8-bit integers in the low 4 bytes of xmm2/m32 to 4 packed 64-bit integers in ymm1 subject to writemask k1."}, {"opcode": "EVEX.512.66.0F38.WIG 22 /r", "instruction": "VPMOVSXBQ zmm1 {k1}{z}, xmm2/m64", "operand_encoding": "D", "description": "Sign extend 8 packed 8-bit integers in the low 8 bytes of xmm2/m64 to 8 packed 64-bit integers in zmm1 subject to writemask k1."}, {"opcode": "EVEX.128.66.0F38.WIG 23 /r", "instruction": "VPMOVSXWD xmm1 {k1}{z}, xmm2/m64", "operand_encoding": "B", "description": "Sign extend 4 packed 16-bit integers in the low 8 bytes of ymm2/mem to 4 packed 32-bit integers in xmm1 subject to writemask k1."}, {"opcode": "EVEX.256.66.0F38.WIG 23 /r", "instruction": "VPMOVSXWD ymm1 {k1}{z}, xmm2/m128", "operand_encoding": "B", "description": "Sign extend 8 packed 16-bit integers in the low 16 bytes of ymm2/m128 to 8 packed 32-bit integers in ymm1 subject to writemask k1."}, {"opcode": "EVEX.512.66.0F38.WIG 23 /r", "instruction": "VPMOVSXWD zmm1 {k1}{z}, ymm2/m256", "operand_encoding": "B", "description": "Sign extend 16 packed 16-bit integers in the low 32 bytes of ymm2/m256 to 16 packed 32-bit integers in zmm1 subject to writemask k1."}, {"opcode": "EVEX.128.66.0F38.WIG 24 /r", "instruction": "VPMOVSXWQ xmm1 {k1}{z}, xmm2/m32", "operand_encoding": "C", "description": "Sign extend 2 packed 16-bit integers in the low 4 bytes of xmm2/m32 to 2 packed 64-bit integers in xmm1 subject to writemask k1."}, {"opcode": "EVEX.256.66.0F38.WIG 24 /r", "instruction": "VPMOVSXWQ ymm1 {k1}{z}, xmm2/m64", "operand_encoding": "C", "description": "Sign extend 4 packed 16-bit integers in the low 8 bytes of xmm2/m64 to 4 packed 64-bit integers in ymm1 subject to writemask k1."}, {"opcode": "EVEX.512.66.0F38.WIG 24 /r", "instruction": "VPMOVSXWQ zmm1 {k1}{z}, xmm2/m128", "operand_encoding": "C", "description": "Sign extend 8 packed 16-bit integers in the low 16 bytes of xmm2/m128 to 8 packed 64-bit integers in zmm1 subject to writemask k1."}, {"opcode": "EVEX.128.66.0F38.W0 25 /r", "instruction": "VPMOVSXDQ xmm1 {k1}{z}, xmm2/m64", "operand_encoding": "B", "description": "Sign extend 2 packed 32-bit integers in the low 8 bytes of xmm2/m64 to 2 packed 64-bit integers in zmm1 using writemask k1."}, {"opcode": "EVEX.256.66.0F38.W0 25 /r", "instruction": "VPMOVSXDQ ymm1 {k1}{z}, xmm2/m128", "operand_encoding": "B", "description": "Sign extend 4 packed 32-bit integers in the low 16 bytes of xmm2/m128 to 4 packed 64-bit integers in zmm1 using writemask k1."}, {"opcode": "EVEX.512.66.0F38.W0 25 /r", "instruction": "VPMOVSXDQ zmm1 {k1}{z}, ymm2/m256", "operand_encoding": "B", "description": "Sign extend 8 packed 32-bit integers in the low 32 bytes of ymm2/m256 to 8 packed 64-bit integers in zmm1 using writemask k1."}]